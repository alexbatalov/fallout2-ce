name: Build

on:
  push:
    paths:
      - '.github/workflows/Build.yml'
      - 'src/**.cc'
      - 'src/**.h'
      - '**/CMakeLists.txt'
      - '**/*.cmake'
  pull_request:
    paths:
      - '.github/workflows/Build.yml'
      - 'src/**.cc'
      - 'src/**.h'
      - '**/CMakeLists.txt'
      - '**/*.cmake'

defaults:
  run:
    shell: bash

jobs:

  StaticAnalysis:
    name:    Static analysis
    runs-on: ubuntu-latest
    steps:

      - name: Install
        run:  |
          :
          echo ::group::apt update
          sudo apt update 2>&1
          echo ::endgroup::
          sudo apt install cppcheck

      - name: Clone
        uses: actions/checkout@v3

      - name: cppcheck
        run:  cppcheck --std=c++17 src/

  linux:
    name: Linux (${{ matrix.arch }})

    runs-on: ubuntu-20.04

    strategy:
      fail-fast: false
      matrix:
        arch:
          - x86
          - x64

    steps:
      - name: Clone
        uses: actions/checkout@v3

      - name: Dependencies (x86)
        if: matrix.arch == 'x86'
        run: |
          sudo dpkg --add-architecture i386
          sudo apt update
          sudo apt install g++-multilib libsdl2-dev:i386 zlib1g-dev:i386

      - name: Dependencies (x64)
        if: matrix.arch == 'x64'
        run: |
          sudo apt update
          sudo apt install libsdl2-dev zlib1g-dev

      - name: Configure (x86)
        if: matrix.arch == 'x86'
        run: |
          cmake \
            -B build \
            -D CMAKE_BUILD_TYPE=RelWithDebInfo \
            -D CMAKE_TOOLCHAIN_FILE=cmake/toolchain/Linux32.cmake \
            # EOL

      - name: Configure (x64)
        if: matrix.arch == 'x64'
        run: |
          cmake \
            -B build \
            -D CMAKE_BUILD_TYPE=RelWithDebInfo \
            # EOL

      - name: Build
        run: |
          cmake --build build -j $(nproc)

      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          name: fallout2-ce-linux-{{ matrix.arch }}
          path:  build/fallout2-ce
          retention-days: 7

  macos:
    name: macOS

    runs-on: macos-latest

    steps:
      - name: Clone
        uses: actions/checkout@v3

      - name: Dependencies
        run: |
          brew install sdl2

      - name: Cache cmake build
        uses: actions/cache@v3
        with:
          path: build
          key: macos-cmake-v1

      - name: Configure
        run: |
          cmake -B build -D CMAKE_BUILD_TYPE=RelWithDebInfo

      - name: Build
        run: |
          cmake --build build -j $(sysctl -n hw.physicalcpu) --target package

      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          name: fallout2-ce-macos.dmg
          path:  build/_CPack_Packages/Darwin/DragNDrop/fallout2-ce/fallout2-ce.dmg
          retention-days: 7

  windows:
    name: Windows (${{ matrix.arch }})

    runs-on: windows-2019

    strategy:
      fail-fast: false
      matrix:
        include:
          - arch: x86
            generator-platform: Win32
          - arch: x64
            generator-platform: x64

    steps:
      - name: Clone
        uses: actions/checkout@v3

      - name: Cache cmake build
        uses: actions/cache@v3
        with:
          path: build
          key: windows-${{ matrix.arch }}-cmake-v1

      - name: Configure
        run: |
          cmake \
            -B build \
            -G "Visual Studio 16 2019" \
            -A ${{ matrix.generator-platform }} \
            # EOL

      - name: Build
        run: |
          cmake \
            --build build \
            --config RelWithDebInfo \
            # EOL

      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          name: fallout2-ce-windows-${{ matrix.arch }}
          path:  build/RelWithDebInfo/fallout2-ce.exe
          retention-days: 7
